# Copyright (c) Microsoft Corporation.
# Licensed under the MIT license.

parameters:
  - name: dockerType
    type: string
  - name: testCase
    type: object

steps:
  - bash: |
      echo ${{ parameters.testCase.description }}
      echo sanitizerBuildParam: ${{ parameters.testCase.sanitizerBuildParam }}
    displayName: Display build parameters
    failOnStderr: true
    continueOnError: false

  - bash: |
      if ! docker run --init --privileged --ulimit memlock=-1 --network host --cap-add=SYS_ADMIN --shm-size=1g --mount type=tmpfs,destination=/dev/shm -e VERBOSE=1 -e JRTC_PATH=/jrtc -e RUN_TESTS=1 -v `pwd`:/jrtc_out_lib -v `pwd`/sample_apps:/jrtc/sample_apps -v `pwd`/jbpf-protobuf/out:/jrtc/jbpf-protobuf/out -v `pwd`/jbpf-protobuf/jbpf/out:/jrtc/jbpf-protobuf/jbpf/out ${{parameters.testCase['sanitizerBuildParam']}} $(containerRegistry)/jrtc-${{ parameters.dockerType }}:$(imageTag); then
        echo Error code is $?
        exit 1
      fi
    displayName: Build and Test
    continueOnError: false

  - task: PublishTestResults@2
    displayName: "Publish Logs"
    inputs:
      testResultsFormat: "JUnit" # Options: JUnit, NUnit, VSTest, xUnit, cTest
      testResultsFiles: "**/**/*.tests.xml"
      #searchFolder: '$(System.DefaultWorkingDirectory)' # Opastional
      mergeTestResults: true # Optional
      failTaskOnFailedTests: true
    continueOnError: false
