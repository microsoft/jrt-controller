parameters:
  - name: dockerType
    type: string
    default: ""

steps:
  - template: submodules.yaml

  # Check if the image exists locally
  - bash: |
      IMAGE_NAME="jrtc-${{ parameters.dockerType }}"
      IMAGE_TAG="$(imageTag)"
      if docker image inspect $IMAGE_NAME:$IMAGE_TAG > /dev/null 2>&1; then
        echo "Image $IMAGE_NAME:$IMAGE_TAG already exists locally. Skipping build."
        exit 0  # Exiting successfully prevents the next step from failing
      else
        echo "Image $IMAGE_NAME:$IMAGE_TAG does not exist locally. Proceeding with build."
        exit 1  # This will fail, but we'll use continueOnError to prevent the pipeline from stopping
      fi
    displayName: 'Check if Image Exists Locally'
    name: checkImage
    continueOnError: true  # Allow the pipeline to continue even if the image exists

  # Only run the build if the previous step failed (i.e., the image was NOT found)
  - bash: |
      echo "Proceeding with the build since the image was not found."
    displayName: 'Trigger Build'
    condition: failed(steps.checkImage)

  - template: images/build.v2.yaml@templates
    parameters:
      arguments: ""
      dockerfile: deploy/${{ parameters.dockerType }}.Dockerfile
      registry: $(containerRegistry)
      repository: jrtc-${{ parameters.dockerType }}
      tags: |
        $(imageTag)
    condition: failed(steps.checkImage)  # Only build if the image check step failed
