/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_SIMPLE_INPUT_PB_H_INCLUDED
#define PB_SIMPLE_INPUT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _simple_input_pb {
    int32_t aggregate_counter;
} simple_input_pb;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define simple_input_pb_init_default             {0}
#define simple_input_pb_init_zero                {0}

/* Field tags (for use in manual encoding/decoding) */
#define simple_input_pb_aggregate_counter_tag    1

/* Struct field encoding specification for nanopb */
#define simple_input_pb_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    aggregate_counter,   1)
#define simple_input_pb_CALLBACK NULL
#define simple_input_pb_DEFAULT NULL

extern const pb_msgdesc_t simple_input_pb_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define simple_input_pb_fields &simple_input_pb_msg

/* Maximum encoded size of messages (where known) */
#define SIMPLE_INPUT_PB_H_MAX_SIZE               simple_input_pb_size
#define simple_input_pb_size                     11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
